version: "3.4"

networks:
  backend:
    driver: bridge
  frontend:

services:
  mssqlserver:
    image: "microsoft/mssql-server-linux:latest"
    ports:
      - "1477:1433"
    container_name: rpgmssqlcontainer
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=!QAZ2wsx
    networks:
      - backend

  catalog:
    build:
      context: .\src\Services\CatalogApi
      dockerfile: Dockerfile
    image: rpgshop/catalog
    environment:
      - DatabaseServer=mssqlserver
      - DatabaseName=CatalogDb
      - DatabaseUser=sa
      - DatabasePassword=!QAZ2wsx
      - ExternalCatalogBaseUrl=http://${RPGSHOP_EXTERNAL_DNS_NAME_OR_IP}:8888
    container_name: rpgcatalogapi
    ports:
      - "8888:80"
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver
      - redis
  webmvc:
    build:
      context: .\src\Presentation\WebMVC
      dockerfile: Dockerfile
    environment:
      - CatalogUrl=http://catalog
    container_name: rpgwebmvc
    ports:
      - "7500:80"
    networks:
      - frontend
    depends_on:
      - catalog
      - auth
  auth:
    build:
      context: .\src\Services\AuthApi
      dockerfile: Dockerfile
    image: rpgshop/auth
    environment:
      - MvcClient=http://${RPGSHOP_EXTERNAL_DNS_NAME_OR_IP}:7500
      - DatabaseServer=mssqlserver
      - DatabaseName=AuthDb
      - DatabaseUser=sa
      - DatabasePassword=!QAZ2wsx
      - ExternalCatalogBaseUrl=http://${RPGSHOP_EXTERNAL_DNS_NAME_OR_IP}:7000
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - ASPNETCORE_Kestrel__Certificates__Default__Password=crypticpassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=./AuthApi.pfx
    container_name: rpgauthapi
    ports:
      - "7100:80"
      - "7101:443"
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  cart:
    build:
      context: .\src\Services\CartApi
      dockerfile: Dockerfile
    image: rpgshop/cart
    environment:
      - ConnectionString=redis
    container_name: rpgcartapi
    ports:
      - "7777:80"
    networks:
      - backend
      - frontend
    depends_on:
      - redis

  redis:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - backend
